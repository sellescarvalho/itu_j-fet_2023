library("ggplot2")
library("ggpubr")
source("E:/processing_of_results/RSNetS-LinePlot.R",encoding = "utf-8")
#metricPlots = c(blockingProbability,bandwidthBlockingProbability,consumedEnergy,costBenefit,energyConsumption,maxBVTUtilization,spectrumUtilization,profit)
#metricPlots = c(blockingProbability,bandwidthBlockingProbability,energyConsumption,spectrumUtilization,externalFragmentation)
metricPlots = c(bandwidthBlockingProbability,blockingProbability)
#metricPlots = c(costBenefit)
#directory1 = "C:/Users/ialle/Documents/pen driver/Academico/Doutorado/Pesquisa/Grooming/Nova Modelagem Normalizado_Line_NSFNet"
#directory2 = "C:/Users/ialle/Documents/pen driver/Academico/Doutorado/Pesquisa/Grooming/Nova Modelagem Normalizado_Line_USA"
directory2 = "E:/processing_of_results/KSPRQOTO/EON"
directory1 = "E:/processing_of_results/KSPRQOTO/USA"
replicacoes = 10
alpha = 0.5
legLoads2 = c("400","450","500","550","600")
legLoads1 = c("300","350","400","450","500")
#legSol = c("MSM","MUE","MSV","MSF","FCCF")
#legSol = c("KSPC","KSPC_Realoc","KSPRQoTO")
#legSol2 = c("DJK","DJK Gat=10","DJK Gat=100","DJK Gat=50")
legSol = c("oiuKSP-RQoTO","CRS-PL","MBBr","ROB","R-RQoT")
title2 = "EON"
title1 = "USA"
nc = 2
nr = 1
plots = c();
for (metricPlot in metricPlots) {
#NSFNeta
legLoads = legLoads1
#legSol = legSol1
p1 <- metricPlot(directory1, replicacoes, alpha, legLoads, legSol) +
ggtitle(title1) + theme(plot.title = element_text(face="bold", size=28, hjust=0.5))
#EON
legLoads = legLoads2
#legSol = legSol2
p2 <- metricPlot(directory2, replicacoes, alpha, legLoads, legSol) +
ggtitle(title2) + theme(plot.title = element_text(face="bold", size=28, hjust=0.5))
show(ggarrange(p1, p2, ncol=nc, nrow=nr, common.legend = TRUE, legend="bottom"))
}
library("ggplot2")
source("E:/processing_of_results/RSNetS.R",encoding = "utf-8")
blockingProbability <- function(directory, replicacoes, alpha, legLoads, legSol){
arq="_BlockingProbability.csv"
metric="blocking probability"
legX = "Carga na rede (Erlangs)"
legY = "PBC"
bs = 6 #quantidade de colunas antes de come?arem os valores de cada replica??o
df = auxExtractDF("_BlockingProbability.csv","blocking probability",directory,replicacoes,alpha,6,legSol)
res = auxPlotLine(df,legLoads,legSol,legX,legY)
return(res)
}
bandwidthBlockingProbability <- function(directory, replicacoes, alpha, legLoads, legSol){
arq="_BandwidthBlockingProbability.csv"
metric="bandwidth blocking probability"
legX = "Carga na rede (Erlangs)"
legY = "PBB"
bs = 6 #quantidade de colunas antes de come?arem os valores de cada replica??o
return(auxPlotLine(auxExtractDF(arq,metric,directory,replicacoes,alpha,bs,legSol),legLoads,legSol,legX,legY))
}
externalFragmentation <- function(directory, replicacoes, alpha, legLoads, legSol){
arq="_ExternalFragmentation.csv"
metric="External Fragmentation (Vertical)"
legX = "Carga na rede (Erlangs)"
legY = "Fragmentacao Externa"
bs = 4 #quantidade de colunas antes de come?arem os valores de cada replica??o
return(auxPlotLine(auxExtractDF(arq,metric,directory,replicacoes,alpha,bs,legSol),legLoads,legSol,legX,legY))
}
relativeFragmentation <- function(directory, replicacoes, alpha, legLoads, legSol){
arq="_RelativelFragmentation.csv"
metric="External Fragmentation (Vertical)"
legX = "Carga na rede (Erlangs)"
legY = "Fragmentacao Externa"
bs = 4 #quantidade de colunas antes de come?arem os valores de cada replica??o
return(auxPlotLine(auxExtractDF(arq,metric,directory,replicacoes,alpha,bs,legSol),legLoads,legSol,legX,legY))
}
txUtilization <- function(directory, replicacoes, alpha, legLoads, legSol){
arq="TransmittersReceiversRegeneratorsUtilization.csv"
metric="Tx Utilization"
legX = "Carga na rede (Erlangs)"
legY = "UtilizaÃ§Ã£o mÃ©dia de transeivers"
bs = 4 #quantidade de colunas antes de come?arem os valores de cada replica??o
return(auxPlotLine(auxExtractDF(arq,metric,directory,replicacoes,alpha,bs,legSol),legLoads,legSol,legX,legY))
}
spectrumUtilization <- function(directory, replicacoes, alpha, legLoads, legSol){
arq="_SpectrumUtilization.csv"
metric="Utilization "
legX = "Carga na rede (Erlangs)"
legY = "Utilizacao de espectro"
bs = 6 #quantidade de colunas antes de come?arem os valores de cada replica??o
return(auxPlotLine(auxExtractDF(arq,metric,directory,replicacoes,alpha,bs,legSol),legLoads,legSol,legX,legY))
}
energyConsumption <- function(directory, replicacoes, alpha, legLoads, legSol){
arq="_EnergyConsumption.csv"
#metric="General power consumption"
metric="Power Consumption geral"
legX = "Carga na rede (Erlangs)"
legY = "Consumo energetico  (W)"
bs = 6 #quantidade de colunas antes de come?arem os valores de cada replica??o
res = auxPlotLine(auxExtractDF(arq,metric,directory,replicacoes,alpha,bs,legSol),legLoads,legSol,legX,legY)+scale_y_continuous(labels = scales::scientific)
return(res)
}
consumedEnergy <- function(directory, replicacoes, alpha, legLoads, legSol){
arq="ConsumedEnergy.csv"
metric="Total consumed energy"
legX = "Carga na rede (Erlangs)"
legY = "Energia consumida (Wd)"
bs = 3 #quantidade de colunas antes de come?arem os valores de cada replica??o
return(auxPlotLine(auxExtractDF(arq,metric,directory,replicacoes,alpha,bs,legSol),legLoads,legSol,legX,legY)+scale_y_continuous(labels = scales::scientific))
}
costBenefit <- function(directory, replicacoes, alpha, legLoads, legSol){
df = auxExtractDFCB(directory,replicacoes,alpha,legSol)
return(auxPlotLine(df,legLoads,legSol,"Carga na rede","RCB"))
}
profit <- function(directory, replicacoes, alpha, legLoads, legSol){
df = auxExtractDFProfit(directory,replicacoes,alpha,legSol)
return(auxPlotLine(df,legLoads,legSol,"Carga na rede","Lucro ($)"))
}
maxBVTUtilization <- function(directory, replicacoes, alpha, legLoads, legSol){
df = auxExtractDFMaxBVTUt(directory,replicacoes,alpha,legSol)
return(auxPlotLine(df,legLoads,legSol,"Carga na rede","UtilizaÃ§Ã£o mÃ¡xima de BVTs"))
}
#Gere seus gr?ficos a partir daqui utilizando as fun??es auxiliares
directory = "E:/processing_of_results/KSPRQOTO/USA"
replicacoes = 3;
alpha = 0.05
legLoads1 = c("300","350","400","450","500")
#legSol = c("20","25","30")
legSol = c("KSP-RQoTO","CRS-PL","MBBr","ROB","R-RQoT")
#legSol = c("ISCC(SaltoDec)","Rev_v1(indSlotDec&deltaSNRCresc)","Rev_v2(indSlotDec&deltaSNRCresc)","Rev_v3(AllCirc-indSlotDec)")
#externalFragmentation(directory, replicacoes, alpha, legLoads, legSol)
blockingProbability(directory, replicacoes, alpha, legLoads, legSol)
bandwidthBlockingProbability(directory, replicacoes, alpha, legLoads, legSol)
#spectrumUtilization(directory, replicacoes, alpha, legLoads, legSol)
#energyConsumption(directory, replicacoes, alpha, legLoads, legSol)
# txUtilization(directory, replicacoes, alpha, legLoads, legSol)
#consumedEnergy(directory, replicacoes, alpha, legLoads, legSol)
#costBenefit(directory, replicacoes, alpha, legLoads, legSol)
#maxBVTUtilization(directory, replicacoes, alpha, legLoads, legSol)
#profit(directory, replicacoes, alpha, legLoads, legSol)
library("ggplot2")
library("ggpubr")
source("E:/processing_of_results/RSNetS-LinePlot.R",encoding = "utf-8")
#metricPlots = c(blockingProbability,bandwidthBlockingProbability,consumedEnergy,costBenefit,energyConsumption,maxBVTUtilization,spectrumUtilization,profit)
#metricPlots = c(blockingProbability,bandwidthBlockingProbability,energyConsumption,spectrumUtilization,externalFragmentation)
metricPlots = c(bandwidthBlockingProbability,blockingProbability)
#metricPlots = c(costBenefit)
#directory1 = "C:/Users/ialle/Documents/pen driver/Academico/Doutorado/Pesquisa/Grooming/Nova Modelagem Normalizado_Line_NSFNet"
#directory2 = "C:/Users/ialle/Documents/pen driver/Academico/Doutorado/Pesquisa/Grooming/Nova Modelagem Normalizado_Line_USA"
directory2 = "E:/processing_of_results/KSPRQOTO/EON"
directory1 = "E:/processing_of_results/KSPRQOTO/USA"
replicacoes = 10
alpha = 0.5
legLoads2 = c("400","450","500","550","600")
legLoads1 = c("300","350","400","450","500")
#legSol = c("MSM","MUE","MSV","MSF","FCCF")
#legSol = c("KSPC","KSPC_Realoc","KSPRQoTO")
#legSol2 = c("DJK","DJK Gat=10","DJK Gat=100","DJK Gat=50")
legSol = c("oiuKSP-RQoTO","CRS-PL","MBBr","ROB","R-RQoT")
title2 = "EON"
title1 = "USA"
nc = 2
nr = 1
plots = c();
for (metricPlot in metricPlots) {
#NSFNeta
legLoads = legLoads1
#legSol = legSol1
p1 <- metricPlot(directory1, replicacoes, alpha, legLoads, legSol) +
ggtitle(title1) + theme(plot.title = element_text(face="bold", size=28, hjust=0.5))
#EON
legLoads = legLoads2
#legSol = legSol2
p2 <- metricPlot(directory2, replicacoes, alpha, legLoads, legSol) +
ggtitle(title2) + theme(plot.title = element_text(face="bold", size=28, hjust=0.5))
show(ggarrange(p1, p2, ncol=nc, nrow=nr, common.legend = TRUE, legend="bottom"))
}
library("ggplot2")
library("ggpubr")
source("E:/processing_of_results/RSNetS-LinePlot.R",encoding = "utf-8")
#metricPlots = c(blockingProbability,bandwidthBlockingProbability,consumedEnergy,costBenefit,energyConsumption,maxBVTUtilization,spectrumUtilization,profit)
#metricPlots = c(blockingProbability,bandwidthBlockingProbability,energyConsumption,spectrumUtilization,externalFragmentation)
metricPlots = c(bandwidthBlockingProbability,blockingProbability)
#metricPlots = c(costBenefit)
#directory1 = "C:/Users/ialle/Documents/pen driver/Academico/Doutorado/Pesquisa/Grooming/Nova Modelagem Normalizado_Line_NSFNet"
#directory2 = "C:/Users/ialle/Documents/pen driver/Academico/Doutorado/Pesquisa/Grooming/Nova Modelagem Normalizado_Line_USA"
directory2 = "E:/processing_of_results/KSPRQOTO/EON"
directory1 = "E:/processing_of_results/KSPRQOTO/USA"
replicacoes = 10
alpha = 0.5
legLoads2 = c("400","450","500","550","600")
legLoads1 = c("300","350","400","450","500")
#legSol = c("MSM","MUE","MSV","MSF","FCCF")
#legSol = c("KSPC","KSPC_Realoc","KSPRQoTO")
#legSol2 = c("DJK","DJK Gat=10","DJK Gat=100","DJK Gat=50")
legSol = c("KSP-RQoTO(Sem Realocação)","KSP-RQoTO+CRS-PL","KSP-RQoTO+MBBr","KSP-RQoTO+ROB","KSP-RQoTO+R-RQoT")
title2 = "EON"
title1 = "USA"
nc = 2
nr = 1
plots = c();
for (metricPlot in metricPlots) {
#NSFNeta
legLoads = legLoads1
#legSol = legSol1
p1 <- metricPlot(directory1, replicacoes, alpha, legLoads, legSol) +
ggtitle(title1) + theme(plot.title = element_text(face="bold", size=28, hjust=0.5))
#EON
legLoads = legLoads2
#legSol = legSol2
p2 <- metricPlot(directory2, replicacoes, alpha, legLoads, legSol) +
ggtitle(title2) + theme(plot.title = element_text(face="bold", size=28, hjust=0.5))
show(ggarrange(p1, p2, ncol=nc, nrow=nr, common.legend = TRUE, legend="bottom"))
}
library("ggplot2")
library("ggpubr")
source("E:/processing_of_results/RSNetS-LinePlot.R",encoding = "utf-8")
#metricPlots = c(blockingProbability,bandwidthBlockingProbability,consumedEnergy,costBenefit,energyConsumption,maxBVTUtilization,spectrumUtilization,profit)
#metricPlots = c(blockingProbability,bandwidthBlockingProbability,energyConsumption,spectrumUtilization,externalFragmentation)
metricPlots = c(bandwidthBlockingProbability,blockingProbability)
#metricPlots = c(costBenefit)
#directory1 = "C:/Users/ialle/Documents/pen driver/Academico/Doutorado/Pesquisa/Grooming/Nova Modelagem Normalizado_Line_NSFNet"
#directory2 = "C:/Users/ialle/Documents/pen driver/Academico/Doutorado/Pesquisa/Grooming/Nova Modelagem Normalizado_Line_USA"
directory2 = "E:/processing_of_results/KSPRQOTO/EON"
directory1 = "E:/processing_of_results/KSPRQOTO/USA"
replicacoes = 10
alpha = 0.5
legLoads2 = c("400","450","500","550","600")
legLoads1 = c("300","350","400","450","500")
#legSol = c("MSM","MUE","MSV","MSF","FCCF")
#legSol = c("KSPC","KSPC_Realoc","KSPRQoTO")
#legSol2 = c("DJK","DJK Gat=10","DJK Gat=100","DJK Gat=50")
legSol = c("Sem Realocação","+CRS-PL","+MBBr","+ROB","+R-RQoT")
title2 = "EON"
title1 = "USA"
nc = 2
nr = 1
plots = c();
for (metricPlot in metricPlots) {
#NSFNeta
legLoads = legLoads1
#legSol = legSol1
p1 <- metricPlot(directory1, replicacoes, alpha, legLoads, legSol) +
ggtitle(title1) + theme(plot.title = element_text(face="bold", size=28, hjust=0.5))
#EON
legLoads = legLoads2
#legSol = legSol2
p2 <- metricPlot(directory2, replicacoes, alpha, legLoads, legSol) +
ggtitle(title2) + theme(plot.title = element_text(face="bold", size=28, hjust=0.5))
show(ggarrange(p1, p2, ncol=nc, nrow=nr, common.legend = TRUE, legend="bottom"))
}
library("ggplot2")
library("ggpubr")
source("E:/processing_of_results/RSNetS-LinePlot.R",encoding = "utf-8")
#metricPlots = c(blockingProbability,bandwidthBlockingProbability,consumedEnergy,costBenefit,energyConsumption,maxBVTUtilization,spectrumUtilization,profit)
#metricPlots = c(blockingProbability,bandwidthBlockingProbability,energyConsumption,spectrumUtilization,externalFragmentation)
metricPlots = c(bandwidthBlockingProbability,blockingProbability)
#metricPlots = c(costBenefit)
#directory1 = "C:/Users/ialle/Documents/pen driver/Academico/Doutorado/Pesquisa/Grooming/Nova Modelagem Normalizado_Line_NSFNet"
#directory2 = "C:/Users/ialle/Documents/pen driver/Academico/Doutorado/Pesquisa/Grooming/Nova Modelagem Normalizado_Line_USA"
directory2 = "E:/processing_of_results/KSPC/EON"
directory1 = "E:/processing_of_results/KSPC/USA"
replicacoes = 10
alpha = 0.5
legLoads2 = c("400","450","500","550","600")
legLoads1 = c("300","350","400","450","500")
#legSol = c("MSM","MUE","MSV","MSF","FCCF")
#legSol = c("KSPC","KSPC_Realoc","KSPRQoTO")
#legSol2 = c("DJK","DJK Gat=10","DJK Gat=100","DJK Gat=50")
legSol = c("Sem Realocação","+CRS-PL","+MBBr","+ROB","+R-RQoT")
title2 = "EON"
title1 = "USA"
nc = 2
nr = 1
plots = c();
for (metricPlot in metricPlots) {
#NSFNeta
legLoads = legLoads1
#legSol = legSol1
p1 <- metricPlot(directory1, replicacoes, alpha, legLoads, legSol) +
ggtitle(title1) + theme(plot.title = element_text(face="bold", size=28, hjust=0.5))
#EON
legLoads = legLoads2
#legSol = legSol2
p2 <- metricPlot(directory2, replicacoes, alpha, legLoads, legSol) +
ggtitle(title2) + theme(plot.title = element_text(face="bold", size=28, hjust=0.5))
show(ggarrange(p1, p2, ncol=nc, nrow=nr, common.legend = TRUE, legend="bottom"))
}
library("ggplot2")
library("ggpubr")
source("E:/processing_of_results/RSNetS-LinePlot.R",encoding = "utf-8")
#metricPlots = c(blockingProbability,bandwidthBlockingProbability,consumedEnergy,costBenefit,energyConsumption,maxBVTUtilization,spectrumUtilization,profit)
#metricPlots = c(blockingProbability,bandwidthBlockingProbability,energyConsumption,spectrumUtilization,externalFragmentation)
metricPlots = c(bandwidthBlockingProbability,blockingProbability)
#metricPlots = c(costBenefit)
#directory1 = "C:/Users/ialle/Documents/pen driver/Academico/Doutorado/Pesquisa/Grooming/Nova Modelagem Normalizado_Line_NSFNet"
#directory2 = "C:/Users/ialle/Documents/pen driver/Academico/Doutorado/Pesquisa/Grooming/Nova Modelagem Normalizado_Line_USA"
directory2 = "E:/processing_of_results/KSPC/EON"
directory1 = "E:/processing_of_results/KSPC/USA"
replicacoes = 10
alpha = 0.5
legLoads2 = c("400","450","500","550","600")
legLoads1 = c("300","350","400","450","500")
#legSol = c("MSM","MUE","MSV","MSF","FCCF")
#legSol = c("KSPC","KSPC_Realoc","KSPRQoTO")
#legSol2 = c("DJK","DJK Gat=10","DJK Gat=100","DJK Gat=50")
legSol = c("Sem Realocação","+CRS-PL","+MBBr","+ROB","+R-RQoT")
title2 = "EON"
title1 = "USA"
nc = 2
nr = 1
plots = c();
for (metricPlot in metricPlots) {
#NSFNeta
legLoads = legLoads1
#legSol = legSol1
p1 <- metricPlot(directory1, replicacoes, alpha, legLoads, legSol) +
ggtitle(title1) + theme(plot.title = element_text(face="bold", size=28, hjust=0.5))
#EON
legLoads = legLoads2
#legSol = legSol2
p2 <- metricPlot(directory2, replicacoes, alpha, legLoads, legSol) +
ggtitle(title2) + theme(plot.title = element_text(face="bold", size=28, hjust=0.5))
show(ggarrange(p1, p2, ncol=nc, nrow=nr, common.legend = TRUE, legend="bottom"))
}
library("ggplot2")
library("ggpubr")
source("E:/processing_of_results/RSNetS-LinePlot.R",encoding = "utf-8")
#metricPlots = c(blockingProbability,bandwidthBlockingProbability,consumedEnergy,costBenefit,energyConsumption,maxBVTUtilization,spectrumUtilization,profit)
#metricPlots = c(blockingProbability,bandwidthBlockingProbability,energyConsumption,spectrumUtilization,externalFragmentation)
metricPlots = c(bandwidthBlockingProbability,blockingProbability)
#metricPlots = c(costBenefit)
#directory1 = "C:/Users/ialle/Documents/pen driver/Academico/Doutorado/Pesquisa/Grooming/Nova Modelagem Normalizado_Line_NSFNet"
#directory2 = "C:/Users/ialle/Documents/pen driver/Academico/Doutorado/Pesquisa/Grooming/Nova Modelagem Normalizado_Line_USA"
directory2 = "E:/processing_of_results/MDPC/EON"
directory1 = "E:/processing_of_results/MDPC/USA"
replicacoes = 10
alpha = 0.5
legLoads2 = c("400","450","500","550","600")
legLoads1 = c("300","350","400","450","500")
#legSol = c("MSM","MUE","MSV","MSF","FCCF")
#legSol = c("KSPC","KSPC_Realoc","KSPRQoTO")
#legSol2 = c("DJK","DJK Gat=10","DJK Gat=100","DJK Gat=50")
legSol = c("Sem Realocação","+CRS-PL","+MBBr","+ROB","+R-RQoT")
title2 = "EON"
title1 = "USA"
nc = 2
nr = 1
plots = c();
for (metricPlot in metricPlots) {
#NSFNeta
legLoads = legLoads1
#legSol = legSol1
p1 <- metricPlot(directory1, replicacoes, alpha, legLoads, legSol) +
ggtitle(title1) + theme(plot.title = element_text(face="bold", size=28, hjust=0.5))
#EON
legLoads = legLoads2
#legSol = legSol2
p2 <- metricPlot(directory2, replicacoes, alpha, legLoads, legSol) +
ggtitle(title2) + theme(plot.title = element_text(face="bold", size=28, hjust=0.5))
show(ggarrange(p1, p2, ncol=nc, nrow=nr, common.legend = TRUE, legend="bottom"))
}
library("ggplot2")
library("ggpubr")
source("E:/processing_of_results/RSNetS-LinePlot.R",encoding = "utf-8")
#metricPlots = c(blockingProbability,bandwidthBlockingProbability,consumedEnergy,costBenefit,energyConsumption,maxBVTUtilization,spectrumUtilization,profit)
#metricPlots = c(blockingProbability,bandwidthBlockingProbability,energyConsumption,spectrumUtilization,externalFragmentation)
metricPlots = c(bandwidthBlockingProbability,blockingProbability)
#metricPlots = c(costBenefit)
#directory1 = "C:/Users/ialle/Documents/pen driver/Academico/Doutorado/Pesquisa/Grooming/Nova Modelagem Normalizado_Line_NSFNet"
#directory2 = "C:/Users/ialle/Documents/pen driver/Academico/Doutorado/Pesquisa/Grooming/Nova Modelagem Normalizado_Line_USA"
directory2 = "E:/processing_of_results/CS/EON"
directory1 = "E:/processing_of_results/CS/USA"
replicacoes = 10
alpha = 0.5
legLoads2 = c("400","450","500","550","600")
legLoads1 = c("300","350","400","450","500")
#legSol = c("MSM","MUE","MSV","MSF","FCCF")
#legSol = c("KSPC","KSPC_Realoc","KSPRQoTO")
#legSol2 = c("DJK","DJK Gat=10","DJK Gat=100","DJK Gat=50")
legSol = c("Sem Realocação","+CRS-PL","+MBBr","+ROB","+R-RQoT")
title2 = "EON"
title1 = "USA"
nc = 2
nr = 1
plots = c();
for (metricPlot in metricPlots) {
#NSFNeta
legLoads = legLoads1
#legSol = legSol1
p1 <- metricPlot(directory1, replicacoes, alpha, legLoads, legSol) +
ggtitle(title1) + theme(plot.title = element_text(face="bold", size=28, hjust=0.5))
#EON
legLoads = legLoads2
#legSol = legSol2
p2 <- metricPlot(directory2, replicacoes, alpha, legLoads, legSol) +
ggtitle(title2) + theme(plot.title = element_text(face="bold", size=28, hjust=0.5))
show(ggarrange(p1, p2, ncol=nc, nrow=nr, common.legend = TRUE, legend="bottom"))
}
library("ggplot2")
library("ggpubr")
source("E:/processing_of_results/RSNetS-LinePlot.R",encoding = "utf-8")
#metricPlots = c(blockingProbability,bandwidthBlockingProbability,consumedEnergy,costBenefit,energyConsumption,maxBVTUtilization,spectrumUtilization,profit)
#metricPlots = c(blockingProbability,bandwidthBlockingProbability,energyConsumption,spectrumUtilization,externalFragmentation)
metricPlots = c(bandwidthBlockingProbability,blockingProbability)
#metricPlots = c(costBenefit)
#directory1 = "C:/Users/ialle/Documents/pen driver/Academico/Doutorado/Pesquisa/Grooming/Nova Modelagem Normalizado_Line_NSFNet"
#directory2 = "C:/Users/ialle/Documents/pen driver/Academico/Doutorado/Pesquisa/Grooming/Nova Modelagem Normalizado_Line_USA"
directory2 = "E:/processing_of_results/CS/EON"
directory1 = "E:/processing_of_results/CS/USA"
replicacoes = 10
alpha = 0.5
legLoads2 = c("400","450","500","550","600")
legLoads1 = c("300","350","400","450","500")
#legSol = c("MSM","MUE","MSV","MSF","FCCF")
#legSol = c("KSPC","KSPC_Realoc","KSPRQoTO")
#legSol2 = c("DJK","DJK Gat=10","DJK Gat=100","DJK Gat=50")
legSol = c("Sem Realocação","+CRS-PL","+MBBr","+ROB","+R-RQoT")
title2 = "EON"
title1 = "USA"
nc = 2
nr = 1
plots = c();
for (metricPlot in metricPlots) {
#NSFNeta
legLoads = legLoads1
#legSol = legSol1
p1 <- metricPlot(directory1, replicacoes, alpha, legLoads, legSol) +
ggtitle(title1) + theme(plot.title = element_text(face="bold", size=28, hjust=0.5))
#EON
legLoads = legLoads2
#legSol = legSol2
p2 <- metricPlot(directory2, replicacoes, alpha, legLoads, legSol) +
ggtitle(title2) + theme(plot.title = element_text(face="bold", size=28, hjust=0.5))
show(ggarrange(p1, p2, ncol=nc, nrow=nr, common.legend = TRUE, legend="bottom"))
}
